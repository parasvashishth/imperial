{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{% if paragraph.field_select_blogs|length > 0 %}
<section class="news_media">
	<div class="container">
		 <div class="row">
			<div class="col-md-12">
				<div class="newsCont">
					<div class="newsContInner">
						<h6>News and Media</h6>
						<h3>Latest News</h3>
						<p>Get information</p>
					</div>
					<div class="newsBtn">
						<a href="https://imperialauto.in/news/" class="btnImperial blueImp">View all posts</a>
					</div>
				</div>
			</div>

			{% if paragraph.field_select_blogs|length > 0 %}
				{% for item in paragraph.field_select_blogs %}
				{# Access the referenced node/entity using item.entity #}
				{% set blogNode = item.entity %}
				{{dump}}
			<div class="col-lg-4 col-sm-6">
				<div class="news_box">
					<div class="news_img">
						<a href="{{ file_url(blogNode.field_blog_image.entity.field_media_image.entity.fileuri) }}">
								<img src="{{ file_url(blogNode.field_blog_image.entity.field_media_image.entity.fileuri) }}" alt="">
						</a>
					</div>
					<div class="news_content">
						<span>News</span>
						<a href="https://imperialauto.in/news/warburg-pincus-buys-out-imperial-auto/"><h4>{{ blogNode.title.value }}</h4></a>
						<p>{{ blogNode.field_description.value }}</p>
					</div>
				</div>
			</div>
			{% endfor %}
			{% endif %}
		</div> 
	</div>
</section>

{% endif %}